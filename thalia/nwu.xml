<?xml version="1.0" encoding="UTF-8"?> <nwu> <Course><Title>725-110-0                Introduction to Computer Programming</Title><Description>Introduction to programming practice using a modern                programming language. Analysis and formulation of problems for                computer solution. Systematic design, construction, and testing of                programs. Substantial programming assignments.</Description><Prereqs>None</Prereqs><PrereqFor>730-205, 730-230</PrereqFor></Course><Course><Title>725-111-0                Fundamentals of Computer Programming</Title><Description>Introduction to principles of programming and procedural                thinking. Procedural abstraction, data abstraction, modularity,                object-oriented programming. Uses computer facilities and the                Scheme programming language. Substantial programming assignments,                including numerical and symbolic programs. Required for computer                science majors.</Description><Prereqs>None</Prereqs><PrereqFor>725-211</PrereqFor></Course><Course><Title>725-120-0                Introduction to Computer and Information Technology</Title><Description>** Not currently offered **</Description></Course><Course><Title>725-130-0 Tools and                Technology of the World Wide Web</Title><Description>Introduction to the theory and practice of developing sites on                and technology for the World Wide Web. It will cover the basics of                HTML, JavaScript, ASP, and CGI programming.</Description><Prereqs>None</Prereqs><Instructor>Kristian Hammond</Instructor></Course><Course><Title>725-211-0                Fundamentals of Computer Programming II</Title><Description>Continuation of 111. Key concepts in software design and                systems programming. Object-oriented programming (in C++), design                of interpreters and compilers, and register machines. Required for                computer science majors.</Description><Prereqs>725-111</Prereqs><PrereqFor>725-311</PrereqFor></Course><Course><Title>725-213-0                Introduction to Computer Systems</Title><Description>This course has four purposes: (1) to learn about the                hierarchy of abstractions and implementations that comprise a                modern computer system; (2) to demystify the machine and the tools                that we use to program it; (3) to come up to speed on systems                programming in C in the Unix environment; (4) to prepare students                for upper-level systems courses.</Description><Prereqs>725-211 or 727-230</Prereqs><Instructor>Peter Dinda</Instructor></Course><Course><Title>725-310-0                Mathematical Foundations of Computer Science</Title><Description>Basic concepts of finite and structural mathematics. Sets,                axiomatic systems, the propositional and predicate calculi, and                graph theory. Application to computer science: sequential                machines, formal grammars, and software design.</Description><Prereqs>725-110 or 725-111 and 435-214-3</Prereqs><PrereqFor>725-322, 725-332, 725-339, 725-343,                725-351</PrereqFor></Course><Course><Title>725-311-0                Data Structures and Data Management</Title><Description>The design, implementation, and analysis of abstract data                types, data structures and their algorithms. Topics include: data                and procedural abstraction, linked lists, stacks, queues, binary                trees, searching, and sorting. Required for computer science                majors.</Description><Prereqs>725-211 or 727-230</Prereqs><PrereqFor>725-322, 725-332, 725-339, 725-343,                725-351</PrereqFor></Course><Course><Title>725-317-0                Data Management and Information Processing</Title><Description>Data models and database design. Modeling the real world:                structures, constraints, and operations. The entity relationship                to data modeling (including network hierarchical and                object-oriented), emphasis on the relational model. Use of                existing database systems for the implementation of information                systems. Note: This course is only for IE/MFE                students - CS/CIS students are not allowed to register for this                course, and it does not carry credit towards the CS/CIS major.</Description><Prereqs>725-110, 725-111, or programming                experience</Prereqs><Instructor>TBA</Instructor></Course><Course><Title>725-322-0                Compiler Construction</Title><Description>Introduction to compiler construction. Lexical analysis and                parsing. Syntax-directed translation. Intermediate code                generation. Machine-code generation. Optimization. Run-time                organization.</Description><Prereqs>725-311</Prereqs><Instructor>Brian Dennis</Instructor></Course><Course><Title>725-325-0                Artificial Intelligence Programming</Title><Description>Introduction to Lisp and programming knowledge-based systems                and interfaces. Strong emphasis on writing maintainable,                extensible systems. Topics include: semantic networks, frames,                pattern matching, deductive inference rules, case-based reasoning,                discrimination trees. Project-driven. Substantial programming                assignments.</Description><Prereqs>725-110, 725-111, or programming                experience</Prereqs><PrereqFor>725-344</PrereqFor><Instructor>Christopher Riesbeck</Instructor></Course><Course><Title>725-330-0                Human Computer Interaction</Title><Description>Introduction to human-computer interaction and the design of                systems that work for people and their organizations. The                goal is to understand the manner in which humans interact with,                and use, their computers for productive work. The course focus is                on the interface as designed artifact. The interface is a design                problem without a single &quot;correct&quot; solution but which has many                &quot;good&quot; solutions and a plethora of &quot;bad&quot; solutions. Class                discussion centers on what makes an interface good and proven                techniques for designing interfaces that meet human needs.</Description><Prereqs>prior programming experience</Prereqs><Instructor>Louis Gomez, Ben Watson</Instructor></Course><Course><Title>725-336-0                Design and Analysis of Algorithms</Title><Description>Analysis techniques: solving recurrence equations. Algorithm                design techniques: divide and conquer, the greedy method,                backtracking, branch-and-bound, and dynamic programming. Sorting                and selection algorithms, order statistics, heaps, and priority                queues.</Description><Prereqs>725-310 and 725-311 or consent of                instructor</Prereqs></Course><Course><Title>725-337-0                Introduction to Semantic Information Processing</Title><Description>A semantics-oriented introduction to natural language                processing, broadly construed. Representation of meaning and                knowledge inference in story understanding, script/frame theory,                plans and plan recognition, counterplanning, and thematic                structures.</Description><Prereqs>725-348 or consent of instructor</Prereqs><Instructor>Larry Birnbaum</Instructor></Course><Course><Title>725-338-0 Practicum In Intelligent                Information Systems</Title><Description>A practical excursion into the building of Intelligent                Information Systems.Each student will develop a working                program in the area of information access, management, capture, or                retrieval. Project definition, data collection, technology                selection, implementation, and project management.                Semantics-oriented introduction to natural language processing,                broadly construed. Representation of meaning and knowledge                inference in story understanding, script/frame theory, plans and                plan recognition, counter-planning, and thematic structures.</Description><Prereqs>n/a</Prereqs><PrereqFor>n/a</PrereqFor><Instructor>Larry Birnbaum and Kris Hammond</Instructor></Course><Course><Title>725-339-0                Introduction to Database Systems</Title><Description>Data models and database design. Modeling the real world:                structures, constraints, and operations. The entity relationship                to data modeling (including network hierarchical and                object-oriented), emphasis on the relational model. Use of                existing database systems for the implementation of information                systems.</Description><Prereqs>725-311</Prereqs><PrereqFor>725-464</PrereqFor></Course><Course><Title>725-340-0                Introduction to Networking</Title><Description>A top-down exploration of networking using the 5 layer model                and TCP/IP stack. HTTP, FTP, DNS, BSD Sockets, concurrent servers,                checksums, reliable transport with stop-and-wait, go-back-n,                selective repeat, flow control, congestion control, TCP, unicast                routing, multicast routing, router architecture, IP, IPv6, IP                multicast, MAC protocols and LANs, Ethernet, ATM, bit-encoding,                and wires. Over the course of the quarter, students build web                clients and servers, and a fully compatible TCP/IP stack that can                run them.</Description><Prereqs>725-311</Prereqs><Instructor>Yan Chen</Instructor></Course><Course><Title>725-343                Operating Systems</Title><Description>Fundamental overview of operating systems. First Quarter:                Operating system structures, processes, process synchronization,                deadlocks, cpu scheduling, memory management, file systems,                secondary storage management. Requires substantial programming                projects.</Description><Prereqs>725-311</Prereqs><PrereqFor>Many 395 offerings</PrereqFor><Instructor>Fabian Bustamante</Instructor></Course><Course><Title>725-344-0                Design of Computer Problem Solvers</Title><Description>Principles and practice of organizing and building AI                reasoning systems. Topics include pattern-directed rule systems,                truth-maintenance systems, and constraint languages.</Description><Prereqs>725-348 and 725-325-1 or equivalent Lisp                experience</Prereqs><Instructor>Kenneth Forbus</Instructor></Course><Course><Title>725-345-0                Distributed Systems</Title><Description>This course addresses some of the basic principals behind                distributed systems (collection of independent components that                appear to the users as a single coherent system) and reviews some                of the main paradigms used to organize them.</Description><Prereqs>725-340 and 725-343 or permission of                instructor</Prereqs></Course><Course><Title>725-348-0                Introduction to Artificial Intelligence</Title><Description>Core techniques and applications of artificial intelligence.                Representation retrieving and application of knowledge for problem                solving. Hypothesis exploration, theorem proving, vision and                neural networks.</Description><Prereqs>725-325-1, 725-111, or Lisp programming                experience</Prereqs><PrereqFor>725-337, 735-344</PrereqFor><Instructor>Lawrence Birnbaum</Instructor></Course><Course><Title>725-351-0                Introduction to Computer Graphics</Title><Description>Mathematical software and hardware requirements for computer                graphics systems. Data structures and programming languages.                Random displays. Graphic applications.</Description><Prereqs>725-311</Prereqs><Instructor>Benjamin Watson</Instructor></Course><Course><Title>725-370-0                Computer Game Design</Title><Description>Fundamentals of computer game design. Topics include: Plot,                narrative and character, simulation for creating game worlds, AI                for synthetic characters, tuning game play. Substantial                programming and project work.</Description><Prereqs>725-311, plus at least one of 725-322,                725-343, 725-348, or 725-351</Prereqs><PrereqFor>n/a</PrereqFor><Instructor>Kenneth Forbus</Instructor></Course><Course><Title>725-394-1,2                Software Project Management and Development</Title><Description>Software development methodologies, object-oriented analysis                and design, CASE tools, software life cycle. Project management                tools, programming teams. Executable specifications, automatic                test generation.</Description><Prereqs>725-343-1 or equivalent programming                experience</Prereqs></Course><Course><Title>725-395/495-0                Special Topics in Computer Science</Title><Description>Topics suggested by students or faculty, with approval of the                department.</Description></Course><Course><Title>725-399-0 Projects</Title><Description>Seminar and projects for advanced undergraduates on subjects                of current interest in computer science.</Description></Course><Course><Title>725-430-0 Design of Interactive                Learning Environments</Title><Description>This course is about the design of computer-based                learning-by-doing environments. It focuses primarily on the                initial conception of an environment more than the technical                issues involved in building these environments. In this course you                will go through the conceptual design process for a number of                different learning environments.</Description><Prereqs>LSCI 403 and 425 are recommended</Prereqs></Course><Course><Title>725-437-1,2                Design of Educational Software Environments</Title><Description>Discourse planning, generation, and advanced problems in NLP,                the role of memory in understanding and learning: remindings,                expectation failures, memory organization, and thematic                structures.</Description></Course><Course><Title>725-443                Advanced Operating Systems</Title><Description>Advanced concepts in operating systems and distributed                computing, covering a wide range of research topics from                historical perspectives to current themes such as peer-to-peer                computing and mobile systems.</Description><Prereqs>725-343 or permission of instructor</Prereqs></Course><Course><Title>725-464                Advanced Database Systems</Title><Description>This class focuses on the implementation of database                management systems: file layout, indexing, query optimization and                processing, concurrency control, disaster recovery and transaction                management.</Description><Prereqs>725-311 and 339 or permission of                instructor</Prereqs></Course><Course><Title>725-499 Projects</Title><Description>Special projects carried out under faculty direction.                Permission of instructor and department required.</Description></Course><Course><Title>725-510 Seminar</Title><Description>Seminar on topics of current interest.</Description></Course> </nwu>