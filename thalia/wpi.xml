<?xml version="1.0" encoding="iso-8859-1"?><wpi > <Course><Title>CS 501. DISCRETE STRUCTURES/</Title><Description>MA        530. DISCRETE MATHEMATICS Topics from discrete mathematics        relevant to computer science are presented in a way that helps the student        develop a facility for dealing with abstractions and formal proofs. These        topics include sets, relations, posets, graphs, digraphs, monoids, groups,        discrete probability theory and propositional calculus. (Prerequisites:        College math at least through calculus and some experience with recursive        programming.) NOTE: This course is intended only for students with a        limited formal computer science background and should only be taken with        advisor or instructor approval.*</Description></Course><Course><Title>CS 502. OPERATING SYSTEMS</Title><Description>The design and        theory of multiprogrammed operating systems, concurrent processes, process        communication, input/output supervisors, memory management, resource        allocation and scheduling are studied. (Prerequisites: Knowledge of        computer organization and elementary data structures, and a strong        programming background.)</Description></Course><Course><Title>CS 503. FOUNDATIONS OF COMPUTER SCIENCE</Title><Description>The foundations of computer science are presented here. These form the        basis for a more complete understanding of and proficiency in computer        science. Topics include logic, computational models, formal languages,        computability and complexity theory. (Prerequisite: Undergraduate or        graduate level discrete structures such as CS        2022, CS        501 or MA        2201.)</Description></Course><Course><Title>CS 504. ANALYSIS OF COMPUTATIONS AND SYSTEMS</Title><Description>The following tools for the analysis of computer programs and systems        are studied: probability, combinatorics, the solution of recurrence        relations and the establishment of asymptotic bounds. A number of        algorithms and advanced data structures are discussed, as well as        paradigms for algorithm design. (Prerequisites: The ability to write a        structured program in a recursive language and a knowledge of discrete        mathematics at the undergraduate level.)</Description></Course><Course><Title>CS 505. SOCIAL IMPLICATIONS OF COMPUTING</Title><Description>This course is concerned with the effects of computer technology on        society. It will explore a wide range of topics including privacy,        liability, proprietary protection, the effects of artificial intelligence        on humanity¹s view of itself and globalization. It will also consider the        issues of professional ethics and professional responsibility, as well as        discrimination in the workplace, in education and in user interfaces.        Papers, presentations, discussions, extensive readings and a course        project are possible components of this course. (Prerequisites: A college        degree and either two computer science classes or a year¹s experience in        the computer industry including sales and management.)</Description></Course><Course><Title>CS 507. DATA STRUCTURES AND ANALYSIS OF        ALGORITHMS</Title><Description>This course studies different data structures from        the point of view of the operations performed upon the data, and to apply        analysis and design techniques to non-numeric algorithms that act on data        structures. Data structures are presented as abstract objects admitting        certain operations. Choices of internal representations and algorithms to        implement them are covered in some detail. The data structures covered        include lists, stacks, queues, priority queues, trees, balanced trees,        graphs and dictionaries. Projects and assignments will treat the        development of theoretical results, the writing of programs to obtain        practical results and techniques to integrate different data structures in        complex algorithms that place a variety of demands upon them.        (Prerequisites: The student is expected to know a recursive programming        language, to have taken two years of college math and an undergraduate        course in data structures, and to have exposure to formal mathematics as        might be found in CS        501.) NOTE: This course is intended only for students with a limited        formal computer science background and should only be taken with advisor        or instructor approval.*</Description></Course><Course><Title>CS 509. DESIGN OF SOFTWARE SYSTEMS</Title><Description>This        course focuses on the high-level design aspects of software engineering.        Included are architectural and interface design. Within architectural        design, the topics covered are Yourdan structured design, Jackson        structured design and object-oriented design. When possible, real-time        extensions are discussed. Sufficient coverage of the areas of requirements        specification and testing is given to support the above topics.        (Prerequisites: Knowledge of a recursive high-level language and data        structures. An undergraduate course in software engineering is desirable.)</Description></Course><Course><Title>CS 513/EE 506. INTRODUCTION TO LOCAL AND WIDE AREA        NETWORKS</Title><Description>This course provides an introduction to the theory        and practice of the design of computer and communications networks,        including the ISO seven-layer reference model. Analysis of network        topologies and protocols, including performance analysis, is treated.        Current network types including local area and wide area networks are        introduced, as are evolving network technologies. The theory, design and        performance of local area networks are emphasized. The course includes an        introduction to queueing analysis and network programming. (Prerequisites:        A knowledge of the C programming language is assumed. CS        504 or EE        502 or equivalent background in probability may be taken        concurrently.)</Description></Course><Course><Title>CS 514/EE 572. ADVANCED SYSTEMS ARCHITECTURE</Title><Description>See EE        572 course description on page 94.</Description></Course><Course><Title>CS 525. TOPICS IN COMPUTER SCIENCE</Title><Description>A topic        of current interest is covered in detail. (Prerequisites: Vary with        topic.) Please consult the department for a current listing of selected        topics in this area.</Description></Course><Course><Title>CS 525W. WEBWARE</Title><Description>This course provides an        overview of various technologies related to the World Wide Web (WWW), with        detailed treatment of selected topics. The topics covered include:        networking aspects of WWW, TCP, HTTP, and DNS protocols, architecture of        Web sites, load balancing, caching, proxy servers, reverse and transparent        proxying, CGI and other approaches to producing dynamic content, HTML        forms and state maintenance on the Web, DHTML (CSS, JavaScript, DOM), XML        and related technologies, graphics and streaming media, network security        issues.Students in this course will be expected to pick up at        least one new programming/scripting language mostly on their own and        complete a substantial programming project (or a series of smaller        projects). It would be helpful if students are already familiar with        networking and operating system aspects and have done respective        programming projects. This is not a strict requirement, however, and most        of the necessary details will be covered in the course. Students should        also expect to be asked to read research papers on various WWW aspects and        give class presentations.</Description></Course><Course><Title>CS 530/EE 530. HIGH-PERFORMANCE NETWORKS</Title><Description>This course is an in-depth study of the theory, design and performance        of high-speed networks. Topics include specific high-performance network        implementations and emerging technologies, including multimedia networks        and quality of service issues. Topics associated with interconnecting        networks such as bridges and routers will also be discussed. Performance        analysis of networks will include basic queueing models. (Prerequisite: CS        513/EE 506.)</Description></Course><Course><Title>CS 531. SYSTEM SIMULATION</Title><Description>The theory and        design of discrete simulations are discussed. Other topics are random        number generations, analysis of output and optimization. (Prerequisites:        CS        504 or equivalent background in probability, and some background in        statistics.)</Description></Course><Course><Title>CS 533/EE 581. MODELING AND PERFORMANCE EVALUATION OF        NETWORK AND COMPUTER SYSTEMS</Title><Description>Methods and concepts of computer        and communication network modeling and system performance         evaluation. Stochastic processes; measurement techniques; monitor tools;        statistical analysis of performance experiments; simulation models;        analytic modeling and queueing theory; M/M, Erlang, G/M, M/G, batch        arrival, bulk service and priority systems; work load characterization;        performance evaluation problems. (Prerequisites: CS        504 or EE        502 or equivalent background in probability.)</Description></Course><Course><Title>CS 534. ARTIFICIAL INTELLIGENCE</Title><Description>This        course gives a broad survey of artificial intelligence. Several basic        techniques such as search methods, formal proofs and knowledge        representation are covered. Selected topics involving the applications of        these tools are investigated. Such topics might include natural language        understanding, scene understanding, game playing, learning and planning.        (Prerequisites: A familiarity with data structures and a recursive        high-level language. Knowledge of LISP is an advantage.)</Description></Course><Course><Title>CS 535. ADVANCED TOPICS IN OPERATING SYSTEMS</Title><Description>This course discusses advanced topics in the theory, design and        implementation of operating systems. Topics will be selected from such        areas as performance of operating systems, distributed operating systems,        operating systems for multiprocessor systems and operating systems        research. (Prerequisites: CS        502 and CS        504, or equivalent background in probability.)</Description></Course><Course><Title>CS 536. PROGRAMMING LANGUAGE DESIGN</Title><Description>This        course discusses the fundamental concepts and general principles        underlying current programming languages and models. Topics include        control and data abstractions, language processing and binding,        indeterminacy and delayed evaluation, and languages and models for        parallel and distributed processing. A variety of computational paradigms        are discussed: functional programming, logic programming, object-oriented        programming and data flow programming. (Prerequisites: Student is expected        to know a recursive programming language and to have an undergraduate        course in data structures.)</Description></Course><Course><Title>CS 538. EXPERT SYSTEMS</Title><Description>The course will        review expert knowledge-based problem-solving systems. It will concentrate        on an analysis of the architecture, knowledge and problem-solving style of        each system in order to classify and compare them. For each system, an        attempt will be made to evaluate its contribution to our understanding of        problems that expert systems can tackle. (Prerequisite: CS        534 or equivalent, or permission of the instructor.)</Description></Course><Course><Title>CS 539. MACHINE LEARNING</Title><Description>The focus of this        course is machine learning for knowledge-based systems. It will include        reviews of work on similarity-based learning (induction),        explanation-based learning, analogical and case-based reasoning and        learning, and knowledge compilation. It will also consider other        approaches to automated knowledge acquisition as well as connectionist        learning. (Prerequisite: CS        534 or equivalent, or permission of the instructor.)</Description></Course><Course><Title>CS 540. ARTIFICIAL INTELLIGENCE IN DESIGN</Title><Description>The main goal of this course is to obtain a deeper understanding of        what ³design² is, and how AI might be used to support and study it.        Students will examine some of the recent AI-based work on design        problem-solving. The course will be run in seminar style, with readings        from the current literature and with student presentations. The domains        will include electrical engineering design, mechanical engineering design,        civil engineering design and software design (i.e., automatic        programming). This course will be of interest to those wanting to prepare        for research in design, or those wishing to increase their understanding        of expert systems. Graduate students from departments other than computer        science are welcome. (Prerequisite: Knowledge of artificial intelligence        is required. This can only be waived with permission of the instructor).</Description></Course><Course><Title>CS 542. DATABASE MANAGEMENT SYSTEMS</Title><Description>An        introduction to the theory and design of database management systems.        Topics covered include internals of database management systems,        fundamental concepts in database theory, and database application design        and development. In particular, logical design and conceptual modeling,        physical database design strategies, relational data model and query        languages, query optimization, transaction management and distributed        databases. Typically there are hands-on assignments and/or a course        project. Selected topics from the current database research literature may        be touched upon as well. (Prerequisite: CS        504 or permission of the instructor.)</Description></Course><Course><Title>CS 543. COMPUTER GRAPHICS</Title><Description>This course        examines typical graphics systems, both hardware and software; design of        low-level software support for raster displays; 3-D surface and solids        modeling; hidden line and hidden surface algorithms; and realistic image        rendering including shading, shadowing, reflection, refraction and surface        texturing. (Prerequisites: A familiarity with data structures, a recursive        high-level language and linear algebra. CS        509 would be helpful.)</Description></Course><Course><Title>CS 544. COMPILER CONSTRUCTION</Title><Description>A general        approach to the design of language processors is presented without regard        for either the source language or target machine. All phases of        compilation and interpretation are investigated in order to give the        student an appreciation for the overall construction of a compiler.        Typical projects may include implementation of a small compiler for a        recursive or special-purpose language. (Prerequisites: A knowledge of        several higher-level languages and at least one assembly language. The        material in CS        503 is helpful.)</Description></Course><Course><Title>CS 545/EE 545. DIGITAL IMAGE PROCESSING</Title><Description>This course presents fundamental concepts of digital image processing        and an introduction to machine vision. Image processing topics will        include visual perception, image formation, imaging geometries, image        transform theory and applications, enhancement, restoration, encoding and        compression. Machine vision topics will include feature extraction and        representation, stereo vision, model-based recognition, motion and image        flow, and pattern recognition. Students will be required to complete        programming assignments in a high-level language. (Prerequisites: A        working knowledge of undergraduate level signal analysis and linear        algebra; familiarity with probability theory is helpful but not        necessary.)</Description></Course><Course><Title>CS 546. HUMAN-COMPUTER INTERACTION</Title><Description>This        course prepares graduate students for research in human-computer        interaction. Topics include the design and evaluation of interactive        computer systems, basic psychological considerations of interaction,        interactive language design, interactive hardware design and special        input/output techniques. Students are expected to present and review        recent research results from the literature, and to complete several        projects. (Prerequisites: Students are expected to have mature programming        skills. Knowledge of software engineering would be an advantage.)</Description></Course><Course><Title>CS 549. COMPUTER VISION</Title><Description>This course        examines current issues in the computer implementation of visual        perception. Topics include image formation, edge detection, segmentation,        shape-from-shading, motion, stereo, texture analysis, pattern        classification and object recognition. We will discuss various        representations for visual information, including sketches and intrinsic        images. (Prerequisites: CS        534, CS        543, CS        545, or the equivalent of one of these courses.)</Description></Course><Course><Title>CS 552/MA 510. NUMERICAL METHODS</Title><Description>See MA        510 course description on page 103.</Description></Course><Course><Title>CS 553. THEORY OF COMPUTABILITY</Title><Description>This        course investigates the principal concerns of computability theory and        presents several alternate formulations of the Church-Turing Thesis.        Starting where the computability portion of CS        503 leaves off, the interrelationships between mathematics and        computation are explored using several different approaches.        (Prerequisite: CS        503.)</Description></Course><Course><Title>CS 559. ADVANCED TOPICS IN THEORETICAL COMPUTER        SCIENCE</Title><Description>This course has an instructor-dependent syllabus.</Description></Course><Course><Title>CS 561. ADVANCED TOPICS IN DATABASE SYSTEMS</Title><Description>This course covers modern database and information systems as well as        research issues in the field. Topics and systems covered may include        object- oriented, workflow, active, deductive, spatial, temporal and        multimedia databases. Also discussed will be recent advances in database        systems such as data mining, on-line analytical processing, data        warehousing, declarative and visual query languages, multimedia database        tools, web and unstructured data sources, and client-server and        heterogeneous systems. The specific subset of topics for a given course        offering is selected by the instructor. Research papers from recent        journals and conferences are used. Group project required. (Prerequisites:        CS        542 or equivalent. Expected background includes a knowledge of        relational database systems.)</Description></Course><Course><Title>CS 562. ADVANCED TOPICS IN SOFTWARE        ENGINEERING</Title><Description>This course focuses on the nondesign aspects of        software engineering. Topics may include requirements specification,        software quality assurance, software project management and software        maintenance. (Prerequisite: CS        509.)</Description></Course><Course><Title>CS 563. ADVANCED TOPICS IN COMPUTER GRAPHICS</Title><Description>This course examines one or more selected current issues in the area        of image synthesis. Specific topics covered are dependent on the        instructor. Potential topics include: scientific visualization,        computational geometry, photo-realistic image rendering and computer        animation. (Prerequisite: CS        543 or equivalent.)</Description></Course><Course><Title>CS 577/EE 537. ADVANCED COMPUTER AND COMMUNICATIONS        NETWORKS</Title><Description>This course covers advanced topics in the theory,        design and performance of computer and communications networks. Topics        will be selected from such areas as local area networks, metropolitan area        networks, wide area networks, queueing models of networks, routing, flow        control, new technologies and protocol standards. The current literature        will be used to study new networks concepts and emerging technologies.        (Prerequisite: CS        513/ EE        506 and CS        533/EE 581.)</Description></Course><Course><Title>CS 578/EE 578. CRYPTOGRAPHY AND DATA SECURITY</Title><Description>See EE        578 course description on page 95.</Description></Course> </wpi>